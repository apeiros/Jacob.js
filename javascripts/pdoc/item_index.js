if (!window.PDoc) window.PDoc = {};
PDoc.elements = {
  'Jacob.I18n#localize': { 'name': 'Jacob.I18n#localize', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/localize/index.html' },
'Jacob.Barrier#block': { 'name': 'Jacob.Barrier#block', 'type': 'instance method', 'path': 'Jacob/Barrier/prototype/block/index.html' },
'Jacob': { 'name': 'Jacob', 'type': 'namespace', 'path': 'Jacob/index.html' },
'Jacob.Util.ownPropertyNames': { 'name': 'Jacob.Util.ownPropertyNames', 'type': 'class method', 'path': 'Jacob/Util/ownPropertyNames/index.html' },
'Jacob.HTTP': { 'name': 'Jacob.HTTP', 'type': 'class', 'path': 'Jacob/HTTP/index.html' },
'Jacob.Codec.base64Encode': { 'name': 'Jacob.Codec.base64Encode', 'type': 'class method', 'path': 'Jacob/Codec/base64Encode/index.html' },
'new Jacob.Template': { 'name': 'new Jacob.Template', 'type': 'constructor', 'path': 'Jacob/Template/new/index.html' },
'Jacob.Template': { 'name': 'Jacob.Template', 'type': 'class', 'path': 'Jacob/Template/index.html' },
'Jacob.I18n#loadLocale': { 'name': 'Jacob.I18n#loadLocale', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/loadLocale/index.html' },
'Jacob.I18n#translate': { 'name': 'Jacob.I18n#translate', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/translate/index.html' },
'Jacob.I18n#l': { 'name': 'Jacob.I18n#l', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/l/index.html' },
'new Jacob.I18n': { 'name': 'new Jacob.I18n', 'type': 'constructor', 'path': 'Jacob/I18n/new/index.html' },
'Jacob.I18n': { 'name': 'Jacob.I18n', 'type': 'class', 'path': 'Jacob/I18n/index.html' },
'Jacob.Codec.Base64': { 'name': 'Jacob.Codec.Base64', 'type': 'mixin', 'path': 'Jacob/Codec/Base64/index.html' },
'Jacob.Util.extend': { 'name': 'Jacob.Util.extend', 'type': 'class method', 'path': 'Jacob/Util/extend/index.html' },
'Jacob.JSON': { 'name': 'Jacob.JSON', 'type': 'mixin', 'path': 'Jacob/JSON/index.html' },
'Jacob.I18n#addTranslators': { 'name': 'Jacob.I18n#addTranslators', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/addTranslators/index.html' },
'new Jacob.Codec.GZip': { 'name': 'new Jacob.Codec.GZip', 'type': 'constructor', 'path': 'Jacob/Codec/GZip/new/index.html' },
'Jacob.Util.clone': { 'name': 'Jacob.Util.clone', 'type': 'class method', 'path': 'Jacob/Util/clone/index.html' },
'Jacob.Template.SuperfluousKeysHandler': { 'name': 'Jacob.Template.SuperfluousKeysHandler', 'type': 'constant', 'path': 'Jacob/Template/SuperfluousKeysHandler/index.html' },
'Jacob.Template.MissingKeyHandler': { 'name': 'Jacob.Template.MissingKeyHandler', 'type': 'constant', 'path': 'Jacob/Template/MissingKeyHandler/index.html' },
'Jacob.Template.KeyError#expectedKeys': { 'name': 'Jacob.Template.KeyError#expectedKeys', 'type': 'instance property', 'path': 'Jacob/Template/KeyError/prototype/expectedKeys/index.html' },
'Jacob.Template.KeyError': { 'name': 'Jacob.Template.KeyError', 'type': 'class', 'path': 'Jacob/Template/KeyError/index.html' },
'Jacob.I18n#cascadeLocales': { 'name': 'Jacob.I18n#cascadeLocales', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/cascadeLocales/index.html' },
'Jacob.Codec.GZip.gunzip': { 'name': 'Jacob.Codec.GZip.gunzip', 'type': 'class method', 'path': 'Jacob/Codec/GZip/gunzip/index.html' },
'Jacob.Codec.GZip': { 'name': 'Jacob.Codec.GZip', 'type': 'class', 'path': 'Jacob/Codec/GZip/index.html' },
'Jacob.Codec.Base64.encode': { 'name': 'Jacob.Codec.Base64.encode', 'type': 'class method', 'path': 'Jacob/Codec/Base64/encode/index.html' },
'Jacob.Barrier#release': { 'name': 'Jacob.Barrier#release', 'type': 'instance method', 'path': 'Jacob/Barrier/prototype/release/index.html' },
'Jacob.Template.KeyError#superfluousKeys': { 'name': 'Jacob.Template.KeyError#superfluousKeys', 'type': 'instance property', 'path': 'Jacob/Template/KeyError/prototype/superfluousKeys/index.html' },
'Jacob.Template.KeyError#template': { 'name': 'Jacob.Template.KeyError#template', 'type': 'instance property', 'path': 'Jacob/Template/KeyError/prototype/template/index.html' },
'Jacob.I18n.builtIn': { 'name': 'Jacob.I18n.builtIn', 'type': 'constant', 'path': 'Jacob/I18n/builtIn/index.html' },
'Jacob.I18n#translateNode': { 'name': 'Jacob.I18n#translateNode', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/translateNode/index.html' },
'Jacob.I18n#addTranslations': { 'name': 'Jacob.I18n#addTranslations', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/addTranslations/index.html' },
'Jacob.I18n#translations': { 'name': 'Jacob.I18n#translations', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/translations/index.html' },
'Jacob.Codec.base64Decode': { 'name': 'Jacob.Codec.base64Decode', 'type': 'class method', 'path': 'Jacob/Codec/base64Decode/index.html' },
'Jacob.Codec.GZipDecode': { 'name': 'Jacob.Codec.GZipDecode', 'type': 'class method', 'path': 'Jacob/Codec/GZipDecode/index.html' },
'Jacob.Util.arraySubtract': { 'name': 'Jacob.Util.arraySubtract', 'type': 'class method', 'path': 'Jacob/Util/arraySubtract/index.html' },
'Jacob.Template#identifiers': { 'name': 'Jacob.Template#identifiers', 'type': 'instance method', 'path': 'Jacob/Template/prototype/identifiers/index.html' },
'new Jacob.Template.KeyError': { 'name': 'new Jacob.Template.KeyError', 'type': 'constructor', 'path': 'Jacob/Template/KeyError/new/index.html' },
'Jacob.I18n#hasKey': { 'name': 'Jacob.I18n#hasKey', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/hasKey/index.html' },
'Jacob.Barrier#wait': { 'name': 'Jacob.Barrier#wait', 'type': 'instance method', 'path': 'Jacob/Barrier/prototype/wait/index.html' },
'Jacob.Util': { 'name': 'Jacob.Util', 'type': 'mixin', 'path': 'Jacob/Util/index.html' },
'Jacob.Template.interpolate': { 'name': 'Jacob.Template.interpolate', 'type': 'class method', 'path': 'Jacob/Template/interpolate/index.html' },
'Jacob.Template.KeyError#givenKeys': { 'name': 'Jacob.Template.KeyError#givenKeys', 'type': 'instance property', 'path': 'Jacob/Template/KeyError/prototype/givenKeys/index.html' },
'Jacob.I18n#prepareNodeForAutomaticTranslation': { 'name': 'Jacob.I18n#prepareNodeForAutomaticTranslation', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/prepareNodeForAutomaticTranslation/index.html' },
'Jacob.Template#interpolate': { 'name': 'Jacob.Template#interpolate', 'type': 'instance method', 'path': 'Jacob/Template/prototype/interpolate/index.html' },
'Jacob.Template.KeyError#missingKeys': { 'name': 'Jacob.Template.KeyError#missingKeys', 'type': 'instance property', 'path': 'Jacob/Template/KeyError/prototype/missingKeys/index.html' },
'Jacob.I18n#locale': { 'name': 'Jacob.I18n#locale', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/locale/index.html' },
'Jacob.HTTP.get': { 'name': 'Jacob.HTTP.get', 'type': 'class method', 'path': 'Jacob/HTTP/get/index.html' },
'Jacob.Codec.Base64._decodeAsArray': { 'name': 'Jacob.Codec.Base64._decodeAsArray', 'type': 'class method', 'path': 'Jacob/Codec/Base64/_decodeAsArray/index.html' },
'Jacob.Codec': { 'name': 'Jacob.Codec', 'type': 'mixin', 'path': 'Jacob/Codec/index.html' },
'Jacob.Barrier#clear': { 'name': 'Jacob.Barrier#clear', 'type': 'instance method', 'path': 'Jacob/Barrier/prototype/clear/index.html' },
'Jacob.JSON.parse': { 'name': 'Jacob.JSON.parse', 'type': 'class method', 'path': 'Jacob/JSON/parse/index.html' },
'Jacob.I18n#normalizeKey': { 'name': 'Jacob.I18n#normalizeKey', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/normalizeKey/index.html' },
'Jacob.I18n#scope': { 'name': 'Jacob.I18n#scope', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/scope/index.html' },
'Jacob.I18n#t': { 'name': 'Jacob.I18n#t', 'type': 'instance method', 'path': 'Jacob/I18n/prototype/t/index.html' },
'Jacob.Codec.Base64.decode': { 'name': 'Jacob.Codec.Base64.decode', 'type': 'class method', 'path': 'Jacob/Codec/Base64/decode/index.html' },
'new Jacob.Barrier': { 'name': 'new Jacob.Barrier', 'type': 'constructor', 'path': 'Jacob/Barrier/new/index.html' },
'Jacob.Barrier': { 'name': 'Jacob.Barrier', 'type': 'class', 'path': 'Jacob/Barrier/index.html' }
};